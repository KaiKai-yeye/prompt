修复 Bug (最常用)
这个模板在简洁和效果之间取得了最佳平衡，适用于大多数代码错误修复场景。

模板结构

你是 [相关领域，如：Python数据分析] 领域的专家。
请修复以下 [编程语言，如：Python] 代码中的 Bug。

代码的预期行为是：[简单描述代码应该做什么]。
现在遇到的问题是：[清晰描述错误行为或粘贴关键错误信息]。

这是我的代码：
code
[语言]
[在此处粘贴你的代码]

#### 示例
##############################################################################################################
你是 Python 数据处理领域的专家。
请修复以下 Python 代码中的 Bug。
代码的预期行为是：处理一个包含用户信息的列表，并打印出每个用户的姓名和年龄。
现在遇到的问题是：当某个用户缺少 'age' 键时，程序会因 KeyError 而崩溃。我希望在这种情况下使用默认年龄 18。
这是我的代码：
code
Python
def process_users(users):
    processed_data = []
    for user in users:
        name = user["name"]
        age = user["age"]
        processed_data.append(f"{name} is {age} years old.")
    return processed_data

sample_users = [{"name": "Alice", "age": 30}, {"name": "Bob"}]
print(process_users(sample_users))

##############################################################################################################
##############################################################################################################
模板二：重构与优化

当你有一段可以运行但不够理想的代码时，使用此模板来提升其质量。

#### 模板结构

你是 [相关领域，如：Web后端开发] 领域的专家。
请重构并优化以下 [编程语言，如：Go] 代码。
我的主要目标是：[选择一个主要目标，如：提高执行速度 / 减少内存占用 / 提升代码可读性]。

这是我的代码：
code
[语言]
[在此处粘贴你的代码]

##############################################################################################################
#### 示例
你是 Python 编程领域的专家。
请重构并优化以下 Python 代码。
我的主要目标是：提升代码的可读性，使用更“Pythonic”的方式来替代手动索引循环。
这是我的代码：
code
Python
items = ['a', 'b', 'c', 'd']
i = 0
for item in items:
    print(i, item)
    i += 1

##############################################################################################################
##############################################################################################################
模板三：添加或修改功能

当你需要为现有代码添加新功能或修改现有逻辑时，使用此模板。

#### 模板结构

你是 [相关领域，如：机器学习] 领域的专家。
请为以下 [编程语言，如：Python] 代码添加一个新功能。
现有代码的功能是：[简单描述当前代码做什么]。
我需要添加的新功能是：[清晰描述你需要的新功能或修改点]。

这是我的代码：
code
[语言]
[在此处粘贴你的代码]

##############################################################################################################
#### 示例
你是 Python 编程领域的专家。
请为以下 Python 代码添加一个新功能。
现有代码的功能是：一个 add 函数，可以计算两个数的和。
我需要添加的新功能是：修改这个函数，使其能接收任意数量的参数，并返回它们的总和。
这是我的代码：
code
Python
def add(a, b):
    return a + b
